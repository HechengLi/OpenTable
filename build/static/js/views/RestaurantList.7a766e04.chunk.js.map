{"version":3,"sources":["components/Input/Input.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Card/Card.js","views/RestaurantList/Restaurant.js"],"names":["Input","id","label","onChange","className","htmlFor","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","Card","restaurant","address","area","image_url","phone","postal_code","price","reserve_url","width","height","src","alt","fill","join","href","target","RestaurantList","React","forwardRef","ref","restaurants","city","map","key","style","padding","marginBottom","connect","state","dispatch","getRestaurants","index","clearRestaurants","useParams","useState","form","setForm","restaurantFiltered","setRestaurantFiltered","listEl","useRef","getMoreRestaurants","loading","eol","current","scrollHeight","clientHeight","scrollTop","handleChange","event","assign","useEffect","expiry","Date","getTime","setTimeout","filter","RegExp","onScroll","Spinner","to","marginRight"],"mappings":"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","file":"static/js/views/RestaurantList.7a766e04.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Input.scss';\r\n\r\nconst Input = ({ id, label, onChange }) => {\r\n  return (\r\n    <div className=\"input\">\r\n      <label className=\"input-label\" htmlFor={id}>{ label }</label>\r\n      <input className=\"input-field\" id={id} onChange={onChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\n\r\nimport './Card.scss'\r\n\r\nconst Card = ({ restaurant: { address, area, image_url, name, phone, postal_code, price, reserve_url }}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-title\">\r\n        { name }\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"card-body-icon\">\r\n          <img width=\"30\" height=\"30\" src={image_url} alt=\"image\" />\r\n        </div>\r\n        <div className=\"card-body-detail\">\r\n          <div className=\"card-body-detail-line\">\r\n            <div>Address</div>\r\n            <div>{ address }</div>\r\n          </div>\r\n          <div className=\"card-body-detail-line\">\r\n            <div>Area</div>\r\n            <div>{ area }</div>\r\n          </div>\r\n          <div className=\"card-body-detail-line\">\r\n            <div>Phone</div>\r\n            <div>{ phone }</div>\r\n          </div>\r\n          <div className=\"card-body-detail-line\">\r\n            <div>Postal Code</div>\r\n            <div>{ postal_code }</div>\r\n          </div>\r\n          <div className=\"card-body-detail-line\">\r\n            <div>Price</div>\r\n            <div>{ Array(price).fill('$').join('') }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-reserve\">\r\n        <a href={reserve_url} target=\"_blank\">Reserve</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport { getRestaurants, clearRestaurants } from '../../store/restaurant/actions';\r\n\r\nimport Input from '../../components/Input/Input';\r\nimport Card from '../../components/Card/Card';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nimport './Restaurant.scss'\r\n\r\nconst RestaurantList = React.forwardRef(({ restaurants, city }, ref) => {\r\n  return (\r\n    <div className=\"restaurant-list\">\r\n      {\r\n        restaurants.map((restaurant, i) => <div key={i} style={{ padding: '0 10px', marginBottom: 15 }}><Card restaurant={restaurant} /></div>)\r\n      }\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Restaurant = ({ restaurant, getRestaurants, clearRestaurants }) => {\r\n  const { city } = useParams();\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    address: ''\r\n  });\r\n  const [restaurantFiltered, setRestaurantFiltered] = useState([]);\r\n  const listEl = useRef(null);\r\n\r\n  const getMoreRestaurants = () => {\r\n    if (!restaurant[city]) {\r\n      getRestaurants(city, 1);\r\n      return;\r\n    }\r\n    if (restaurant[city].loading || restaurant[city].eol) return\r\n    else if (listEl.current.scrollHeight - listEl.current.clientHeight === listEl.current.scrollTop) {\r\n      getRestaurants(city, restaurant[city].index);\r\n    }\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (listEl.current.scrollHeight - listEl.current.clientHeight === listEl.current.scrollTop) {\r\n      getMoreRestaurants();\r\n    }\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setForm(Object.assign({}, form, { [event.target.id]: event.target.value }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (restaurant[city] && restaurant[city].expiry <= new Date().getTime()) clearRestaurants(city);\r\n    else setTimeout(() => getMoreRestaurants());\r\n  }, [restaurant[city], form]);\r\n\r\n  useEffect(() => {\r\n    if (restaurant[city] && restaurant[city].restaurants)\r\n      setRestaurantFiltered(restaurant[city].restaurants.filter(\r\n        restaurant => new RegExp(`^${form.name}`).test(restaurant.name) && new RegExp(`^${form.address}`).test(restaurant.address)\r\n      ))\r\n  }, [restaurant[city], form])\r\n\r\n  if (!restaurant[city]) return <Spinner />\r\n\r\n  return (\r\n    <div id=\"restaurant\" onScroll={handleScroll} ref={listEl}>\r\n      {\r\n        restaurant[city].loading ? <Spinner /> : null\r\n      }\r\n      <Link className=\"btn margin-tb\" to='/'>Back</Link>\r\n      <div className=\"search-box margin-tb\">\r\n        <div style={{ marginRight: 15 }}>\r\n          <Input id=\"name\" label=\"Name\" onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <Input id=\"address\" label=\"Address\" onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n      <RestaurantList restaurants={restaurantFiltered} city={city} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  restaurant: state.restaurant\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getRestaurants: (city, index) => dispatch(getRestaurants(city, index)),\r\n  clearRestaurants: (city) => dispatch(clearRestaurants(city))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Restaurant);"],"sourceRoot":""}